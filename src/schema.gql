# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type ScheduleDto {
  id: Int!
  startTime: Time!
  endTime: Time!
  type: ScheduleType!
  status: Boolean!
}

"""Format representating time with timezone in the format HH:mm:ss.sssZ"""
scalar Time

enum ScheduleType {
  SCHEDULE_5x2
  SCHEDULE_6x1
  SCHEDULE_12x36
}

type PaginatedScheduleDto {
  data: [ScheduleDto!]!
  total: Int!
}

type SkillDto {
  id: Int!
  description: String!
  status: Boolean!
}

type PaginatedSkillDto {
  data: [SkillDto!]!
  total: Int!
}

type EmployeeDto {
  id: ID!
  firstName: String!
  lastName: String!
  birthDate: DateTime!
  status: Boolean!
  scheduleId: Int
  schedule: ScheduleDto
  createdAt: DateTime!
  updatedAt: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type PaginatedEmployeeDto {
  data: [EmployeeDto!]!
  total: Int!
}

type EmployeeFullDto {
  id: ID!
  firstName: String!
  lastName: String!
  birthDate: DateTime!
  status: Boolean!
  scheduleId: Int
  schedule: ScheduleDto!
  createdAt: DateTime!
  updatedAt: DateTime!
  skills: [SkillDto!]!
}

type Query {
  employee(id: ID!): EmployeeDto!
  employeeWithRelations(id: ID!): EmployeeFullDto!
  employeeList(limit: Int! = 10, offset: Int! = 0, filter: EmployeeFilterDto!): PaginatedEmployeeDto!
  schedule(id: Int!): ScheduleDto!
  scheduleList(limit: Int! = 10, offset: Int! = 0, filter: ScheduleFilterDto!): PaginatedScheduleDto!
  skill(id: Int!): SkillDto!
  skillList(limit: Int! = 10, offset: Int! = 0, filter: SkillFilterDto!): PaginatedSkillDto!
}

input EmployeeFilterDto {
  status: Boolean! = true
  scheduleId: [Int!]! = []
}

input ScheduleFilterDto {
  type: [ScheduleType!]! = []
  status: Boolean! = true
}

input SkillFilterDto {
  status: Boolean! = true
}

type Mutation {
  createEmployee(employee: EmployeeCreateDto!, skills: [Int!]): EmployeeDto!
  updateEmployee(id: ID!, employee: EmployeeUpdateDto!, skills: [Int!]): EmployeeDto!
  updateEmployeeStatus(id: ID!, status: Boolean!): EmployeeDto!
  deleteEmployee(id: ID!): EmployeeDto!
  createSchedule(schedule: ScheduleCreateDto!): ScheduleDto!
  updateSchedule(id: Int!, schedule: ScheduleUpdateDto!): ScheduleDto!
  updateScheduleStatus(id: Int!, status: Boolean!): ScheduleDto!
  deleteSchedule(id: Int!): ScheduleDto!
  createSkill(skill: SkillCreateDto!, employees: [ID!]): SkillDto!
  updateSkill(id: Int!, skill: SkillUpdateDto!, employees: [ID!]): SkillDto!
  updateSkillStatus(id: Int!, status: Boolean!): SkillDto!
  deleteSkill(id: Int!): SkillDto!
}

input EmployeeCreateDto {
  firstName: String!
  lastName: String!
  birthDate: DateTime!
  status: Boolean! = true
  scheduleId: Int
}

input EmployeeUpdateDto {
  firstName: String
  lastName: String
  birthDate: DateTime
  status: Boolean = true
  scheduleId: Int
}

input ScheduleCreateDto {
  startTime: Time!
  endTime: Time!
  type: ScheduleType!
  status: Boolean! = true
}

input ScheduleUpdateDto {
  startTime: Time
  endTime: Time
  type: ScheduleType
  status: Boolean = true
}

input SkillCreateDto {
  description: String!
  status: Boolean! = true
}

input SkillUpdateDto {
  description: String
  status: Boolean = true
}